
R version 4.2.2 (2022-10-31) -- "Innocent and Trusting"
Copyright (C) 2022 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> # This program primarily handles computing academic age of author
> #  = time since first publication
> # Output (intermediate files)
> # - authors.exp.df.rds <- file.path(interwrk,"authors.exp.df.Rds")
> # Auxiliary files:
> # - file.path(interwrk,"audit-exp.csv")) (output to prepare edits)
> # - file.path(crossrefloc,"audit-exp.xlsx")) (input after edits)
> 
> 
> source(file.path(rprojroot::find_rstudio_root_file(),"pathconfig.R"),echo=FALSE)
> source(file.path(basepath,"global-libraries.R"),echo=FALSE)
Loading required package: dplyr

Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: devtools
Loading required package: usethis
Loading required package: rprojroot
Loading required package: tictoc
Loading required package: ggplot2
Loading required package: bindrcpp
Loading required package: Rcpp
Loading required package: grateful
> source(file.path(programs,"libraries.R"), echo=FALSE)
Loading required package: rcrossref
Loading required package: readr
Loading required package: tidyr
Loading required package: data.table

Attaching package: ‘data.table’

The following object is masked from ‘package:tictoc’:

    shift

The following objects are masked from ‘package:dplyr’:

    between, first, last

Loading required package: xtable
Loading required package: rjson
Loading required package: stargazer

Please cite as: 

 Hlavac, Marek (2022). stargazer: Well-Formatted Regression and Summary Statistics Tables.
 R package version 5.2.3. https://CRAN.R-project.org/package=stargazer 

Loading required package: knitr
Loading required package: stringr
Loading required package: readxl
Loading required package: fastDummies
Loading required package: skimr
Loading required package: sandwich
Loading required package: pastecs

Attaching package: ‘pastecs’

The following objects are masked from ‘package:data.table’:

    first, last

The following object is masked from ‘package:tidyr’:

    extract

The following objects are masked from ‘package:dplyr’:

    first, last

Loading required package: formattable

Attaching package: ‘formattable’

The following object is masked from ‘package:xtable’:

    digits

Loading required package: markdown
Loading required package: reshape2

Attaching package: ‘reshape2’

The following objects are masked from ‘package:data.table’:

    dcast, melt

The following object is masked from ‘package:tidyr’:

    smiths

Skipping install of 'openalexR' from a github remote, the SHA1 (558581c6) has not changed since last install.
  Use `force = TRUE` to force installation
> source(file.path(programs,"config.R"), echo=FALSE)
> 
> 
> # Unpack the citations data for the authors field -> au_id
> # These files come from 42
> authors.df.rds   <- file.path(interwrk,"authors.df.Rds")
> citations.df.rds <- file.path(interwrk,"citations.df.Rds")
> authors.completed.df.rds <- file.path(interwrk,"authors.completed.df.Rds")
> authors.exp.df.rds <- file.path(interwrk,"authors.exp.df.Rds")
> 
> 
> if ( file.exists(authors.df.rds) ) {
+   message(paste0("File already exists: ",authors.df.rds))
+   message("Loading file from previous version.")
+ } else {
+   stop(paste0("File should have been present: ",authors.df.rds))
+ }
File already exists: /home/rstudio/data/interwrk/authors.df.Rds
Loading file from previous version.
> 
> ## load the file from disk
> authors.df <- readRDS(authors.df.rds)
> 
> if ( file.exists(citations.df.rds) ) {
+   message(paste0("File already exists: ",citations.df.rds))
+   message("Loading file from previous version.")
+ } else {
+   stop(paste0("File should have been present: ",citations.df.rds))
+ }
File already exists: /home/rstudio/data/interwrk/citations.df.Rds
Loading file from previous version.
> 
> ## load the file from disk
> citations.df <- readRDS(citations.df.rds)
> 
> # there are citations that are wrong
> message(paste0(" Unique authors in citations.df: ",nrow(citations.df %>% distinct(au_id))))
 Unique authors in citations.df: 1114
> 
> 
> # names(citations.df)
> citations.df %>%
+   # Kenneth J Arrow rule...
+   filter(publication_year > 1950) %>%
+   select(starts_with("au"),article_id,publication_year) %>%
+   distinct(au_id,article_id,.keep_all = TRUE) %>%
+   group_by(au_id) %>%
+   mutate(earliest_pub = min(publication_year),
+          latest_pub = max(publication_year)) %>%
+   select(starts_with("au"),earliest_pub,latest_pub) %>%
+   distinct(au_id,.keep_all = TRUE) -> author_exp.early
> 
> message(paste0(" Unique authors in author_exp.early: ",nrow(author_exp.early %>% distinct(au_id))))
 Unique authors in author_exp.early: 1114
> 
> # Verify plausibility
> 
> author_exp.early %>%
+   mutate(exp=latest_pub-earliest_pub) %>%
+   filter(exp > 50 | earliest_pub < 1950) -> audit
> 
> audit <- left_join(audit %>% select(au_id,au_display_name,earliest_pub) %>% distinct(),
+                    authors.df %>% select(article_id,au_id,publication_year,doi.url),
+                    by=c("au_id","earliest_pub"="publication_year"),multiple="all")
> 
> 
> write_excel_csv(audit,file=file.path(interwrk,"audit-exp.csv"))
> 
> # Edit instructions
> # - Open the CSV
> # - Search for information on the named author. The spreadsheet has the early publications.
> #   These MIGHT be legit (Kenneth J Arrow is legit!) but mostly not.
> # - Find the year of Ph.D., or if not available, via Google Scholar, the observed earliest year of publication.
> # - Save the CSV-imported file with the SAME name, but as XLSX in crossrefloc!
> 
> # Read them back in.
> 
> exp_audit <- read_excel(file.path(crossrefloc,"audit-exp.xlsx")) %>%
+   select(au_id,verified_first) %>%
+   filter(!is.na(verified_first)) %>%
+   group_by(au_id) %>%
+   mutate(verified_first=min(verified_first,na.rm=TRUE)) %>%
+   distinct()
> 
> nrow(exp_audit)
[1] 112
> # merge the audited data back on. Also apply conditions.
> 
> citations.df %>%
+   # Kenneth J Arrow rule...
+   filter(publication_year > 1950) %>%
+   select(starts_with("au"),article_id,publication_year) %>%
+   distinct(au_id,article_id,.keep_all = TRUE) %>%
+   group_by(au_id) %>%
+   mutate(earliest_pub = min(publication_year),
+          latest_pub = max(publication_year)) %>%
+   # bring in audited file
+   left_join(exp_audit,by=c("au_id")) %>%
+   mutate(earliest_pub = max(earliest_pub,verified_first,na.rm=TRUE)) %>%
+   select(starts_with("au"),earliest_pub,latest_pub) %>%
+   distinct(au_id,.keep_all = TRUE) %>%
+   ungroup() -> author_exp.final
> 
> message(paste0(" Unique authors in author_exp.final: ",nrow(author_exp.final %>% distinct(au_id))))
 Unique authors in author_exp.final: 1114
> 
> saveRDS(author_exp.final,file=authors.exp.df.rds)
> nrow(author_exp.final %>% distinct(au_id))
[1] 1114
> skim(author_exp.final)
── Data Summary ────────────────────────
                           Values          
Name                       author_exp.final
Number of rows             1114            
Number of columns          4               
_______________________                    
Column type frequency:                     
  character                2               
  numeric                  2               
________________________                   
Group variables            None            

── Variable type: character ────────────────────────────────────────────────────────────────────────────────────────────
  skim_variable   n_missing complete_rate min max empty n_unique whitespace
1 au_id                   0             1  32  32     0     1114          0
2 au_display_name         0             1   5  29     0     1110          0

── Variable type: numeric ──────────────────────────────────────────────────────────────────────────────────────────────
  skim_variable n_missing complete_rate  mean     sd   p0   p25  p50  p75 p100 hist 
1 earliest_pub          0             1 2001. 11.1   1951 1994. 2003 2009 2021 ▁▁▃▇▅
2 latest_pub            0             1 2021.  0.758 2011 2021  2021 2021 2021 ▁▁▁▁▇
> 
> # merge the h-index data by year of publication, do aggregations across authors
> # Run the same regressions as with WoS data
> 
> proc.time()
   user  system elapsed 
  16.37    1.96   16.94 


R version 4.2.2 (2022-10-31) -- "Innocent and Trusting"
Copyright (C) 2022 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> # Getting in-scope articles
> # Code derived from another project
> # NOTE: THIS REQUIRES R 4.2.0 and newer packages!
> #
> 
> source(file.path(rprojroot::find_rstudio_root_file(),"pathconfig.R"),echo=FALSE)
> source(file.path(basepath,"global-libraries.R"),echo=FALSE)
Loading required package: dplyr

Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: devtools
Loading required package: usethis
Loading required package: rprojroot
Loading required package: tictoc
Loading required package: ggplot2
Loading required package: bindrcpp
Loading required package: Rcpp
Loading required package: grateful
> source(file.path(programs,"libraries.R"), echo=FALSE)
Loading required package: rcrossref
Loading required package: readr
Loading required package: tidyr
Loading required package: data.table

Attaching package: ‘data.table’

The following object is masked from ‘package:tictoc’:

    shift

The following objects are masked from ‘package:dplyr’:

    between, first, last

Loading required package: xtable
Loading required package: rjson
Loading required package: stargazer

Please cite as: 

 Hlavac, Marek (2022). stargazer: Well-Formatted Regression and Summary Statistics Tables.
 R package version 5.2.3. https://CRAN.R-project.org/package=stargazer 

Loading required package: knitr
Loading required package: stringr
Loading required package: readxl
Loading required package: fastDummies
Loading required package: skimr
Loading required package: sandwich
Loading required package: pastecs

Attaching package: ‘pastecs’

The following objects are masked from ‘package:data.table’:

    first, last

The following object is masked from ‘package:tidyr’:

    extract

The following objects are masked from ‘package:dplyr’:

    first, last

Loading required package: formattable

Attaching package: ‘formattable’

The following object is masked from ‘package:xtable’:

    digits

Loading required package: markdown
Loading required package: reshape2

Attaching package: ‘reshape2’

The following objects are masked from ‘package:data.table’:

    dcast, melt

The following object is masked from ‘package:tidyr’:

    smiths

Skipping install of 'openalexR' from a github remote, the SHA1 (558581c6) has not changed since last install.
  Use `force = TRUE` to force installation
> source(file.path(programs,"config.R"), echo=FALSE)
> 
> library(rcrossref)
> 
> # filenames in config.R
> 
> 
> # Each journal has a ISSN
> if (!file.exists(issns.file)) {
+   issns <- data.frame(matrix(ncol=3,nrow=1))
+   names(issns) <- c("journal","issn","lastdate")
+   tmp.date <- c("2000-01")
+   issns[1,] <- c("American Economic Journal: Applied Economics","1945-7790",tmp.date)
+   saveRDS(issns, file= issns.file)
+ }
> 
> issns <- readRDS(file = issns.file)
> 
> if (!file.exists(doi.file.Rds) ) {
+   new.df <- NA
+   for ( x in 1 ) {
+     new <- cr_journals(issn=issns[x,"issn"], works=TRUE,
+                        filter=c(from_pub_date=issns[x,"lastdate"]),
+                        select=c("DOI","title","published-print","volume","issue","container-title","author"),
+                        .progress="text",
+                        cursor = "*")
+     if ( x == 1 ) {
+       new.df <- as.data.frame(new$data)
+       new.df$issn = issns[x,"issn"]
+     } else {
+       tmp.df <- as.data.frame(new$data)
+       tmp.df$issn = issns[x,"issn"]
+       new.df <- bind_rows(new.df,tmp.df)
+       rm(tmp.df)
+     }
+   }
+   # filters
+   new.df %>%
+     filter(title!="Front Matter") %>%
+     filter(!str_detect(title,"Volume")) %>%
+     filter(!str_detect(title,"Forthcoming")) %>%
+     filter(doi != "10.1257/app.2009.0001") %>% # this is a duplicate of 10.1257/app.1.4.1 !
+     # filter(title!="Editor's Note") %>%
+     # More robust
+     filter(str_sub(doi, start= -1)!="i")-> filtered.df
+   message(paste0("Saving new file: ",doi.file.Rds))
+   saveRDS(filtered.df, file=  doi.file.Rds)
+   rm(new)
+ } else {
+   message(paste0("File already exists: ",doi.file.Rds))
+   message("Loading file from previous version.")
+ }
File already exists: /home/rstudio/data/crossref/crossref_aejdois.Rds
Loading file from previous version.
> 
> 
> # clean read-back
> aejdois <- readRDS(file= doi.file.Rds)
> nrow(aejdois)
[1] 630
> 
> # subset to the years in-scope: 2009-2018.
> aejdois %>%
+   mutate(year=substr(published.print,1,4)) %>%
+   filter(year < 2019 ) %>%
+   filter(published.print < '2018-07-01') %>%
+   group_by(year) %>%
+   summarise(Published=n())    -> aejdois.by.year
> 
> aejdois.by.year
# A tibble: 10 × 2
   year  Published
   <chr>     <int>
 1 2009         34
 2 2010         40
 3 2011         37
 4 2012         40
 5 2013         38
 6 2014         40
 7 2015         35
 8 2016         37
 9 2017         42
10 2018         20
> 
> aejdois.by.year %>% ungroup() %>% summarize(n=sum(Published)) -> aejdois.total
> 
> aejdois.total
# A tibble: 1 × 1
      n
  <int>
1   363
> 
> #  Some nnumbers for the text
> cat(as.numeric(aejdois.total),
+     file=file.path(TexIncludes,"aejdoistotal.tex"))
> 
> 
> 
> 
> ###################################################
> ### code chunk number 5: tab1_1
> ###################################################
> # Print yearly breakdown of article count table
> # This redoes Table 1, after R&R
> 
> complete_sample <- readRDS(file=file.path(dataloc,"00_complete_sample.Rds"))
> nrow(complete_sample)
[1] 274
> 
> # test: match to complete sample by DOI, should be no missing (complete_rate = 1)
> 
> left_join(complete_sample,aejdois %>% mutate(match=TRUE),by=c("DOI"="doi")) %>% select(match) %>% skim()
── Data Summary ────────────────────────
                           Values    
Name                       Piped data
Number of rows             274       
Number of columns          1         
_______________________              
Column type frequency:               
  logical                  1         
________________________             
Group variables            None      

── Variable type: logical ──────────────────────────────────────────────────────────────────────────────────────────────
  skim_variable n_missing complete_rate mean count   
1 match                 0             1    1 TRU: 274
> 
> # create the table
> 
> complete_sample %>%
+   group_by(year) %>%
+   summarize(Selected=n()) %>%
+   right_join(aejdois.by.year) -> t_entry
Joining with `by = join_by(year)`
> 
> 
> 
> # Add sum row
> t_entry[11,1] = c("Total")
> t_entry[11,2] = colSums(t_entry[,2],na.rm=TRUE)
> t_entry[11,3] = colSums(t_entry[,3],na.rm=TRUE)
> 
> t_entry %>%
+   select(year,Published,Selected) %>%
+   mutate(`Percent` = round(Selected/Published*100,2)) %>%
+   pivot_longer(cols = -1 ) %>%
+   pivot_wider(names_from = "year",values_from = "value") %>%
+   rename(` `=name) -> t_entry_t
> 
> print(t_entry_t)
# A tibble: 3 × 12
  ` `       `2009` `2010` `2011` `2012` `2013` `2014` `2015` `2016` `2017` `2018` Total
  <chr>      <dbl>  <dbl>  <dbl>  <dbl>  <dbl>  <dbl>  <dbl>  <dbl>  <dbl>  <dbl> <dbl>
1 Published   34     40     37     40     38       40     35   37     42       20 363  
2 Selected    21     23     32     39      8       40     21   33     39       18 274  
3 Percent     61.8   57.5   86.5   97.5   21.0    100     60   89.2   92.9     90  75.5
> 
> # Transpose table
> #t_entry_t <- transpose(t_entry)
> #colnames(t_entry_t) <- t_entry_t[1, ] # the first row will be the header
> #t_entry_t = t_entry_t[-1, ]
> 
> 
> stargazer(t_entry_t,
+           type="latex",title = "Articles Published and Selected by Year",label="tab:Selection",
+           style="aer",
+           flip=FALSE,summary=FALSE, rownames = FALSE,
+           font.size = fs,column.sep.width = cw,
+           out=file.path(TexIncludes,"table_article_selection.tex"),
+           notes=c("Notes: Assessments made using the entry questionnaire by replicators,",
+                   "prior to attempting to reproduce any tables or figures. The sample of assessed",
+                   "papers comprises those for which we had complete assessment questionnaires."))

% Table created by stargazer v.5.2.3 by Marek Hlavac, Social Policy Institute. E-mail: marek.hlavac at gmail.com
% Date and time: Sat, Mar 16, 2024 - 03:26:05 AM
\begin{table}[!htbp] \centering 
  \caption{Articles Published and Selected by Year} 
  \label{tab:Selection} 
\footnotesize 
\begin{tabular}{@{\extracolsep{0.4pt}} cccccccccccc} 
\\[-1.8ex]\hline 
\hline \\[-1.8ex] 
  & 2009 & 2010 & 2011 & 2012 & 2013 & 2014 & 2015 & 2016 & 2017 & 2018 & Total \\ 
\hline \\[-1.8ex] 
Published & 34 & 40 & 37 & 40 & 38 & 40 & 35 & 37 & 42 & 20 & 363 \\ 
Selected & 21 & 23 & 32 & 39 & 8 & 40 & 21 & 33 & 39 & 18 & 274 \\ 
Percent & 61.76 & 57.5 & 86.49 & 97.5 & 21.05 & 100 & 60 & 89.19 & 92.86 & 90 & 75.48 \\ 
\hline \\[-1.8ex] 
\multicolumn{12}{l}{Notes: Assessments made using the entry questionnaire by replicators,} \\ 
\multicolumn{12}{l}{prior to attempting to reproduce any tables or figures. The sample of assessed} \\ 
\multicolumn{12}{l}{papers comprises those for which we had complete assessment questionnaires.} \\ 
\end{tabular} 
\end{table} 
> 
> proc.time()
   user  system elapsed 
  13.55    1.92   13.99 


R version 4.2.2 (2022-10-31) -- "Innocent and Trusting"
Copyright (C) 2022 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> # This program collects bibliographic information for all the DOIs read by the replicators from crossref
> 
> source(file.path(rprojroot::find_rstudio_root_file(),"pathconfig.R"),echo=FALSE)
> source(file.path(basepath,"global-libraries.R"),echo=FALSE)
Loading required package: dplyr

Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: devtools
Loading required package: usethis
Loading required package: rprojroot
Loading required package: tictoc
Loading required package: ggplot2
Loading required package: bindrcpp
Loading required package: Rcpp
> source(file.path(programs,"libraries.R"), echo=FALSE)
Loading required package: rcrossref
Loading required package: readr
Loading required package: tidyr
Loading required package: data.table

Attaching package: ‘data.table’

The following object is masked from ‘package:tictoc’:

    shift

The following objects are masked from ‘package:dplyr’:

    between, first, last

Loading required package: xtable
Loading required package: rjson
Loading required package: stargazer

Please cite as: 

 Hlavac, Marek (2022). stargazer: Well-Formatted Regression and Summary Statistics Tables.
 R package version 5.2.3. https://CRAN.R-project.org/package=stargazer 

Loading required package: knitr
Loading required package: stringr
Loading required package: readxl
Loading required package: fastDummies
Loading required package: skimr
Loading required package: sandwich
Loading required package: pastecs

Attaching package: ‘pastecs’

The following objects are masked from ‘package:data.table’:

    first, last

The following object is masked from ‘package:tidyr’:

    extract

The following objects are masked from ‘package:dplyr’:

    first, last

Loading required package: formattable

Attaching package: ‘formattable’

The following object is masked from ‘package:xtable’:

    digits

Skipping install of 'openalexR' from a github remote, the SHA1 (558581c6) has not changed since last install.
  Use `force = TRUE` to force installation
> source(file.path(programs,"config.R"), echo=FALSE)
> 
> # Read dataframes of the 3 datasets created in previous files
> repllist.doi <- readRDS(file=file.path(dataloc,"replication_list_pub.Rds")) %>% select(DOI)
> exit.doi <- readRDS(file=file.path(dataloc,"exitQ_pub.Rds")) %>% select(DOI)
> entry.doi <- readRDS(file=file.path(dataloc,"entryQ_pub.Rds")) %>% select(DOI)
> crossref.file <- file.path(crossrefloc,"crossref_info")
> 
> # Gather DOIs
> dois_toget <- unique(c(repllist.doi$DOI,exit.doi$DOI,entry.doi$DOI))
> 
> ############ UNDERSTANDING DATA
> assessment_data1 <- unique(repllist.doi)
> assessment_data2 <- unique(exit.doi) 
> assessment_data3 <- unique(entry.doi)
> # we have 1231 papers in  the replication list (because it covers not only applied, we assign after), 
> # during the years 2009 2018 we should have 390 papers to be replicated (published effectively)
> # exit: 514, but 451 unique
> # entry: 912 but 802 unique
> # We have 1125 unique DOI in replication list, 
> # 1136 doi_toget total: recall that replication has too many listed (not selective on published AEJ applied, binding constraint 
> # should be 451 from exit)
> #################
> # Get citation information from Crossref (this can take a while).
> 
> if ( file.exists(paste0(crossref.file,".Rds"))) {
+     message(paste0("File already exists: ",crossref.file))
+     message("Loading file from previous version.")
+     bibinfo.df <- readRDS(file=paste0(crossref.file,".Rds"))
+ } else {
+ 
+ tic.clear()
+ tic("Query to CrossRef")
+ bibinfo <- cr_cn(dois_toget, format = "bibentry")
+ toc(log=TRUE)
+ 
+ # Save bibliographic information object
+ saveRDS(bibinfo,file=file.path(interwrk,"crossref_query.Rds"))
+ 
+ # Convert to data frame
+ bibinfo.df <- lapply(bibinfo,function(x) as.data.frame(x)) %>% bind_rows() %>% distinct()
+ names(bibinfo.df)[1] <- "DOI"
+ # the url field is not well constructed, we just rebuild it from scratch
+ bibinfo.df$url = paste0("https://doi.org/",bibinfo.df$DOI)
+ 
+ # Save the information as dataframes
+ saveRDS(bibinfo.df,file=paste0(crossref.file,".Rds"))
+ write.csv(bibinfo.df,file=paste0(crossref.file,".csv"))
+ 
+ # Store log of time required to run
+ bibinfo.log <- tic.log(format=FALSE)
+ saveRDS(bibinfo.log,file=file.path(crossrefloc,"crossref_timing.Rds"))
+ }
File already exists: /home/rstudio/data/crossref/crossref_info
Loading file from previous version.
> 
> 
> # Prepare diagnostics
> dois.df <- as.data.frame(dois_toget)
> names(dois.df) <- "DOI"
> crossref.diagnostics <- anti_join(as.data.frame(dois.df),bibinfo.df)
Joining with `by = join_by(DOI)`
> saveRDS(crossref.diagnostics,file=file.path(interwrk,"crossref.diagnostics.Rds"))
> 
> proc.time()
   user  system elapsed 
   1.80    1.49    1.77 

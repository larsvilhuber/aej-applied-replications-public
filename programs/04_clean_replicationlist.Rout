
R version 4.2.2 (2022-10-31) -- "Innocent and Trusting"
Copyright (C) 2022 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> # We clean up additional variables on repllist (which is manually coded)
> 
> source(file.path(rprojroot::find_rstudio_root_file(),"pathconfig.R"),echo=FALSE)
> source(file.path(basepath,"global-libraries.R"),echo=FALSE)
Loading required package: dplyr

Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: devtools
Loading required package: usethis
Loading required package: rprojroot
Loading required package: tictoc
Loading required package: ggplot2
Loading required package: bindrcpp
Loading required package: Rcpp
Loading required package: markdown
> source(file.path(programs,"libraries.R"), echo=FALSE)
Loading required package: rcrossref
Loading required package: readr
Loading required package: tidyr
Loading required package: data.table

Attaching package: ‘data.table’

The following object is masked from ‘package:tictoc’:

    shift

The following objects are masked from ‘package:dplyr’:

    between, first, last

Loading required package: xtable
Loading required package: rjson
Loading required package: stargazer

Please cite as: 

 Hlavac, Marek (2022). stargazer: Well-Formatted Regression and Summary Statistics Tables.
 R package version 5.2.3. https://CRAN.R-project.org/package=stargazer 

Loading required package: knitr
Loading required package: stringr
Loading required package: readxl
Loading required package: fastDummies
Loading required package: skimr
Loading required package: sandwich
Loading required package: pastecs

Attaching package: ‘pastecs’

The following objects are masked from ‘package:data.table’:

    first, last

The following object is masked from ‘package:tidyr’:

    extract

The following objects are masked from ‘package:dplyr’:

    first, last

Loading required package: formattable

Attaching package: ‘formattable’

The following object is masked from ‘package:xtable’:

    digits

Skipping install of 'openalexR' from a github remote, the SHA1 (558581c6) has not changed since last install.
  Use `force = TRUE` to force installation
> source(file.path(programs,"config.R"), echo=FALSE)
> 
> # Read the compiled replication lists
> repllist2 <- readRDS(file=file.path(dataloc,"replication_list_pub.Rds"))
> 
> # Merge with bibliographic information and save new dataframe
> bibinfo.df <- readRDS(file=file.path(crossrefloc,"crossref_info.Rds"))
> repllist3 <- left_join(repllist2,bibinfo.df,by="DOI")
> saveRDS(repllist3,file=file.path(interwrk,"replication_list_3.Rds"))
> 
> # -------------------------------------
> # Manually tidy the Replicated variable, which is a bit noisy
> # -------------------------------------
> 
> # Check to see the various options used
> table(repllist3$Replicated1)

                                    Full                                   Mostly 
                                       1                                        6 
                                      no                                       No 
                                      20                                      390 
                                 Partial                                partially 
                                     125                                       14 
                               Partially                                 partical 
                                      13                                        1 
                                  Partly                                        Y 
                                       1                                        1 
                                     yes                                      Yes 
                                      12                                      129 
Yes(?) Table 3 still unable to replicate 
                                       1 
> table(repllist3$Replicated2)

                            mostly                    N (Code errors)                                 no 
                                 1                                  2                                  1 
                                No                            partial                            Partial 
                                 1                                  1                                  4 
  Partial (SAS files couldn't run)                         Y (mostly) Y (unavailable data for one table) 
                                 1                                  1                                  1 
                               yes                                Yes 
                                 1                                  2 
> 
> # Classify the various options
> val.partial <- c("partial","partially","partly","yes(?) table 3 still unable to replicate","mostly",
+                  "partial (sas files couldn't run)","y (mostly)","y (unavailable data for one table)")
> val.yes <- c("yes","y")
> val.no  <- c("no","n","n (code errors)")
> 
> # Recode
> repllist4 <- repllist3 %>%
+ 	mutate(replicated1_clean = ifelse(tolower(Replicated1) %in% val.partial,"partially",
+ 	                                  ifelse(tolower(Replicated1) %in% val.yes, "yes",
+ 	                                         ifelse(tolower(Replicated1) %in% val.no,"no",
+ 	                                                tolower(Replicated1)
+ 	                                                )
+ 	                                         )
+ 	                                  )
+ 	       ) %>%
+   mutate(replicated2_clean = ifelse(tolower(Replicated2) %in% val.partial,"partially",
+                                     ifelse(tolower(Replicated2) %in% val.yes, "yes",
+                                            ifelse(tolower(Replicated2) %in% val.no,"no",
+                                                   tolower(Replicated2)
+                                                   )
+                                            )
+                                     )
+          )
> 
> # Save master replication list to be used for analysis
> saveRDS(repllist4,file=file.path(interwrk,"replication_list_clean.Rds"))
> 
> proc.time()
   user  system elapsed 
   1.69    1.53    1.67 
